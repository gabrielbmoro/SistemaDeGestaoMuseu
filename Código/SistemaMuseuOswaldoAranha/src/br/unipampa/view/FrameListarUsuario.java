/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.unipampa.view;

import br.unipampa.model.ItemConsignado;
import br.unipampa.model.Usuario;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gabrielbmoro
 */
public class FrameListarUsuario extends javax.swing.JFrame implements WindowListener {

    private Usuario usuario;
    private DefaultTableModel modeloDeTabelaUsuarios;

    /**
     * Creates new form FrameListarUsuario
     */
    public FrameListarUsuario() {
        initComponents();
        modeloDeTabelaUsuarios = (DefaultTableModel) jTableUsuarios.getModel();
        ConfiguracaoFrame.configFrameComTamanhoPersonalizado(this, 687, 200);

        addWindowListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuarios = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setTitle("Registros de Usuários");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jTableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Cpf", "Endereço", "Telefone", "Status", "Administrador"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableUsuarios);

        jLabel1.setText("Usuários do Sistema:");

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/unipampa/view/icons/editar.png"))); // NOI18N
        btnEditar.setToolTipText("Editar Dados de Usuario");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnListar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/unipampa/view/icons/listar.png"))); // NOI18N
        btnListar.setToolTipText("Listar Usuarios Cadastrados");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/unipampa/view/icons/lixeira.png"))); // NOI18N
        btnExcluir.setToolTipText("Excluir Usuario");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(btnListar))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(btnExcluir))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnListar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        listarRegistrosDeUsuarios();
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try {
            int linhaSelecionada = jTableUsuarios.getSelectedRow();
            Object idDeElemento = modeloDeTabelaUsuarios.getValueAt(linhaSelecionada, 1);
            if (idDeElemento != null) {

                Long idLong = Long.parseLong(idDeElemento.toString());
                if (idLong != 0) {
                    Usuario usuario = new Usuario();
                    Usuario usuarioTemporario = (Usuario) usuario.recuperarPeloID(idLong);
                    if (usuarioTemporario != null) {
                        new FrameInfoEditUsuario(usuarioTemporario);
                    }
                }

            } else {
                GeradorDeMensagem.exibirMensagemDeInformacao("Selecione uma linha para realizar a operação!", "Alerta ao Usuário");
            }
        } catch (Exception erro) {
            GeradorDeMensagem.exibirMensagemDeInformacao("Selecione uma linha para realizar a operação!", "Alerta ao Usuário");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            int linhaSelecionada = jTableUsuarios.getSelectedRow();
            Object isAdm = modeloDeTabelaUsuarios.getValueAt(linhaSelecionada, 5);
            if (isAdm != null) {
                String isAdmTexto = isAdm.toString();
                if (isAdmTexto.equalsIgnoreCase("Sim")) {
                    GeradorDeMensagem.exibirMensagemDeInformacao("A Operação não pode ser realizada, você não tem privilégios!", "Alerta ao Usuário");
                } else {
                    Object idDeElemento = modeloDeTabelaUsuarios.getValueAt(linhaSelecionada, 1);
                    Long idLong = Long.parseLong(idDeElemento.toString());
                    if (idLong != 0) {
                        Usuario usuariot = new Usuario();
                        Object objetoASerExcluido = usuariot.recuperarPeloID(idLong);
                        if (objetoASerExcluido != null) {
                            if (GeradorDeMensagem.exibirMensagemDeConfirmacao("Deseja remover o registro?", "Alerta ao Usuário") == true) {
                                boolean resultado = usuariot.deletar(objetoASerExcluido);
                                if (resultado) {
                                    GeradorDeMensagem.exibirMensagemDeInformacao("Registro Excluído com sucesso!", "Alerta ao Usuário");
                                    listarRegistrosDeUsuarios();
                                } else {
                                    GeradorDeMensagem.exibirMensagemDeErro("Ocorreu um problema, realize a operação mais tarde!");
                                }
                            }
                        } else {
                            GeradorDeMensagem.exibirMensagemDeErro("Ocorreu um problema, realize a operação mais tarde!");

                        }
                    }
                }
            }

        } catch (Exception erro) {
            GeradorDeMensagem.exibirMensagemDeInformacao("Selecione uma linha para realizar a operação!", "Alerta ao Usuário");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        listarRegistrosDeUsuarios();
    }//GEN-LAST:event_formWindowActivated

    private void listarRegistrosDeUsuarios() {
        this.modeloDeTabelaUsuarios.setNumRows(0);
        this.usuario = new Usuario();
        List listaDeUsuarios = this.usuario.recuperarTodos();
        for (Object objetoUsuario : listaDeUsuarios) {
            if (objetoUsuario instanceof Usuario) {
                Usuario usuarioTemp = (Usuario) objetoUsuario;
                String respostaAdm = "";
                String respostaAtivo = "";
                String CPFadaptado = "";
                if (usuarioTemp.isSouUsuarioAdministrador()) {
                    respostaAdm = "Sim";
                } else {
                    respostaAdm = "Não";
                }
                if (usuarioTemp.isStatus()) {
                    respostaAtivo = "Sim";
                } else {
                    respostaAtivo = "Não";
                }

                int zeros = 11 - usuarioTemp.getCpf().toString().length();
                while (zeros > 0) {
                    CPFadaptado = CPFadaptado + "0";
                    zeros--;
                }
                CPFadaptado = CPFadaptado + usuarioTemp.getCpf();
                this.modeloDeTabelaUsuarios.addRow(new Object[]{usuarioTemp.getNome(),
                    CPFadaptado, usuarioTemp.getEndereco(), usuarioTemp.getTelefone(),
                    respostaAtivo, respostaAdm});
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnListar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUsuarios;
    // End of variables declaration//GEN-END:variables
 @Override
    public void windowOpened(WindowEvent e) {
    }

    @Override
    public void windowClosing(WindowEvent e) {
        dispose();
    }

    @Override
    public void windowClosed(WindowEvent e) {

    }

    @Override
    public void windowIconified(WindowEvent e) {
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
    }

    @Override
    public void windowActivated(WindowEvent e) {
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
    }

}
